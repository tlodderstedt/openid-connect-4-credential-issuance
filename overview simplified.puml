@startuml

actor User as U
participant Wallet as W
box Issuer
participant "Nonce Endpoint" as init
participant "Authorization Endpoint" as AS
participant "Token Endpoint" as T
participant "Credential Endpoint" as P
participant "Deferred Credential" as I
end box
autoactivate on
hide footbox

U -> W: interact
note over W: Wallet discovers input material\nrequired to request issuance\nof a certain credential (Optional)

W -> init: get_presentation_nonce
return p_nonce

W -> W: prepare presentations (bound to presentation_nonce)
deactivate W

W -> AS: authorize (credential type in claims parameter, nonce, code_challenge and (opt)presentations)

note over AS: Issuer will authenticate user or utilize credentials or assertions to identify user. \noptions: local login, callback to wallet (OIDC4VPs), federated login (via OpenID or SAML), ...

return code

W -> T: token (code, code_verifier)
return access_token, id_token(, c_nonce)

W->P: credentials (access_token, credential type, bindable proof)

return credential or acceptance_token

W->I: deferred credential request (accptance_token)
return credential

@enduml